exports.id=410,exports.ids=[410],exports.modules={39727:()=>{},47990:()=>{},56621:(a,b,c)=>{"use strict";c.d(b,{ND:()=>g,nl:()=>i,zw:()=>h});var d=c(66437);let e="https://zvelgxclmqgohntjimyf.supabase.co",f="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp2ZWxneGNsbXFnb2hudGppbXlmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkyOTkzMDUsImV4cCI6MjA2NDg3NTMwNX0.CFdW-XH8y7hkOm7LUtqQxs36hPTRBYtha4EIeRhIXto";if(!e||!f)throw Error("Missing Supabase environment variables");let g=(0,d.UU)(e,f,{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0},global:{fetch:(a,b={})=>fetch(a,{...b,signal:AbortSignal.timeout(3e4)})},db:{schema:"public"},realtime:{params:{eventsPerSecond:10}}}),h=()=>{let a=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!a)throw Error("Missing SUPABASE_SERVICE_ROLE_KEY environment variable");return(0,d.UU)(e,a,{auth:{autoRefreshToken:!1,persistSession:!1}})},i=a=>(console.error("Supabase error:",a),a?.code==="PGRST116")?"No data found":a?.code==="23505"?"Record already exists":a?.code==="23503"?"Referenced record not found":a?.message||"An unexpected error occurred"},78335:()=>{},93077:(a,b,c)=>{"use strict";c.d(b,{Yc:()=>g,iv:()=>f});class d{constructor(a){this.config=a,this.baseURL=a.baseURL||("production"===a.environment?"https://api.bitnob.com/api/v1":"https://sandboxapi.bitnob.com/api/v1")}generateSignature(a,b,d,e,f=""){let g=c(55511),h=`${a}${b}${d}${e}${f}`;return g.createHmac("sha256",this.config.secretKey).update(h).digest("hex")}async makeRequest(a,b="GET",d){try{let e=c(55511),f=Date.now().toString(),g=e.randomBytes(16).toString("hex"),h=d?JSON.stringify(d):"",i=this.generateSignature(b,a,f,g,h),j=new AbortController,k=setTimeout(()=>j.abort(),1e4),l=await fetch(`${this.baseURL}${a}`,{method:b,headers:{"Content-Type":"application/json",Accept:"application/json","x-auth-client":this.config.clientId,"x-auth-timestamp":f,"x-auth-nonce":g,"x-auth-signature":i},body:d?JSON.stringify(d):void 0,signal:j.signal});if(clearTimeout(k),!l.ok){let a=await l.json().catch(()=>({}));throw Error(`Bitnob API Error: ${l.status} - ${a.message||l.statusText}`)}return await l.json()}catch(a){if(console.error("Bitnob Service Error:",a),a instanceof Error){if(a.message.includes("getaddrinfo ENOTFOUND")||a.message.includes("fetch failed"))throw Error("Bitnob service is currently unavailable. Please try again later.");if("AbortError"===a.name)throw Error("Bitnob service request timed out. Please try again.")}throw a}}async isServiceAvailable(){try{if(!this.config.clientId||!this.config.secretKey)return console.warn("Bitnob credentials not configured"),!1;let a=await this.makeRequest("/health");return a&&"ok"===a.status}catch(a){return console.error("Bitnob service availability check failed:",a),!1}}async testEndpoints(){let a={};for(let b of["/health","/ping","/wallets","/lightning/invoice","/lightning/send","/bitcoin/send","/rates"])try{let d=c(55511),e=Date.now().toString(),f=d.randomBytes(16).toString("hex"),g=this.generateSignature("GET",b,e,f),h=await fetch(`${this.baseURL}${b}`,{method:"GET",headers:{"x-auth-client":this.config.clientId,"x-auth-timestamp":e,"x-auth-nonce":f,"x-auth-signature":g,"Content-Type":"application/json"}});a[b]=404!==h.status}catch(c){a[b]=!1}return a}async createWallet(a){try{if(!await this.isServiceAvailable())throw Error("Bitnob service is currently unavailable");return(await this.makeRequest("/wallets/create","POST",{phoneNumber:a.phoneNumber,email:a.email,firstName:a.firstName,lastName:a.lastName,dateOfBirth:a.dateOfBirth,address:a.address})).data}catch(a){throw console.error("Bitnob wallet creation error:",a),Error(`Wallet creation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getWalletDetails(a){try{return(await this.makeRequest(`/wallets/${a}`)).data}catch(a){throw Error(`Failed to get wallet details: ${a instanceof Error?a.message:"Unknown error"}`)}}async getWalletBalance(a){try{return(await this.makeRequest(`/wallets/${a}/balance`)).data}catch(a){throw Error(`Balance inquiry failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async sendLightningPayment(a){try{if(!await this.isServiceAvailable())throw Error("Bitnob service is currently unavailable. Please try again later.");return(await this.makeRequest("/lightning/send","POST",{amount:a.amount,reference:a.reference,narration:a.narration||"SACCO Platform Payment"})).data}catch(a){if(console.error("Lightning payment error:",a),a instanceof Error&&a.message.includes("404"))throw Error("Lightning payment service is temporarily unavailable. The API endpoint may have changed. Please contact support.");throw Error(`Lightning payment failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async createLightningInvoice(a){try{return(await this.makeRequest("/lightning/invoice","POST",{amount:a.amount,currency:a.currency,reference:a.reference,memo:a.memo||"SACCO Platform Payment",expiresIn:a.expiresIn||3600})).data}catch(a){throw Error(`Invoice creation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async payLightningInvoice(a,b){try{return(await this.makeRequest("/lightning/pay","POST",{invoice:a,walletId:b})).data}catch(a){throw Error(`Invoice payment failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async sendBitcoin(a){try{return(await this.makeRequest("/bitcoin/send","POST",{amount:a.amount,address:a.address,reference:a.reference,narration:a.narration||"SACCO Platform Payment"})).data}catch(a){throw Error(`Bitcoin transaction failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async generateBitcoinAddress(a){try{return(await this.makeRequest(`/bitcoin/address/${a}`,"POST")).data}catch(a){throw Error(`Address generation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async submitKYC(a){try{let b=new FormData;Object.entries(a).forEach(([a,c])=>{c instanceof File?b.append(a,c):c&&b.append(a,c.toString())});let d=c(55511),e=Date.now().toString(),f=d.randomBytes(16).toString("hex"),g=this.generateSignature("POST","/kyc/submit",e,f),h=await fetch(`${this.baseURL}/kyc/submit`,{method:"POST",headers:{"x-auth-client":this.config.clientId,"x-auth-timestamp":e,"x-auth-nonce":f,"x-auth-signature":g},body:b});if(!h.ok){let a=await h.json().catch(()=>({}));throw Error(`KYC submission failed: ${a.message||h.statusText}`)}return(await h.json()).data}catch(a){throw Error(`KYC submission failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getKYCStatus(a){try{return(await this.makeRequest(`/kyc/status/${a}`)).data}catch(a){throw Error(`KYC status check failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async convertBTCToFiat(a){try{return(await this.makeRequest("/convert","POST",{amount:a.amount,fromCurrency:a.fromCurrency,toCurrency:a.toCurrency,reference:a.reference})).data}catch(a){throw Error(`Conversion failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getExchangeRates(a="BTC"){try{return(await this.makeRequest(`/rates?base=${a}`)).data}catch(a){throw Error(`Failed to get exchange rates: ${a instanceof Error?a.message:"Unknown error"}`)}}async getTransactionHistory(a,b=50,c=0){try{return(await this.makeRequest(`/transactions?walletId=${a}&limit=${b}&offset=${c}`)).data}catch(a){throw Error(`Failed to get transaction history: ${a instanceof Error?a.message:"Unknown error"}`)}}async getTransactionDetails(a){try{return(await this.makeRequest(`/transactions/${a}`)).data}catch(a){throw Error(`Failed to get transaction details: ${a instanceof Error?a.message:"Unknown error"}`)}}verifyWebhookSignature(a,b,d){try{let e=c(55511),f=e.createHmac("sha256",d).update(a).digest("hex");return e.timingSafeEqual(Buffer.from(b,"hex"),Buffer.from(f,"hex"))}catch(a){return console.error("Webhook signature verification failed:",a),!1}}async sendUSDT(a){try{return(await this.makeRequest("/stablecoins/usdt/send","POST",{amount:a.amount,currency:a.currency,targetNetwork:a.targetNetwork,recipientAddress:a.recipientAddress,reference:a.reference})).data}catch(a){throw Error(`USDT transfer failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async convertToUSDT(a){try{return(await this.makeRequest("/stablecoins/convert","POST",{amount:a.amount,fromCurrency:a.fromCurrency,toCurrency:"USDT",reference:a.reference})).data}catch(a){throw Error(`USDT conversion failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async sendCrossBorderPayment(a){try{return(await this.makeRequest("/cross-border/send","POST",{amount:a.amount,sourceCurrency:a.sourceCurrency,targetCurrency:a.targetCurrency,recipientCountry:a.recipientCountry,recipientPhoneNumber:a.recipientPhoneNumber,recipientBankAccount:a.recipientBankAccount,reference:a.reference,description:a.description||"SACCO Cross-border Payment"})).data}catch(a){throw Error(`Cross-border payment failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getCrossBorderRates(a,b,c){try{return(await this.makeRequest(`/cross-border/rates?source=${a}&target=${b}&country=${c}`)).data}catch(a){throw Error(`Failed to get cross-border rates: ${a instanceof Error?a.message:"Unknown error"}`)}}async createVirtualCard(a){try{return(await this.makeRequest("/virtual-cards/create","POST",{userId:a.userId,cardHolderName:a.cardHolderName,spendingLimit:a.spendingLimit,currency:a.currency,type:a.type})).data}catch(a){throw Error(`Virtual card creation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getVirtualCards(a){try{return(await this.makeRequest(`/virtual-cards/user/${a}`)).data}catch(a){throw Error(`Failed to get virtual cards: ${a instanceof Error?a.message:"Unknown error"}`)}}async updateCardLimit(a,b){try{return(await this.makeRequest(`/virtual-cards/${a}/limit`,"PUT",{spendingLimit:b})).data}catch(a){throw Error(`Failed to update card limit: ${a instanceof Error?a.message:"Unknown error"}`)}}async freezeCard(a){try{return(await this.makeRequest(`/virtual-cards/${a}/freeze`,"POST")).data}catch(a){throw Error(`Failed to freeze card: ${a instanceof Error?a.message:"Unknown error"}`)}}async unfreezeCard(a){try{return(await this.makeRequest(`/virtual-cards/${a}/unfreeze`,"POST")).data}catch(a){throw Error(`Failed to unfreeze card: ${a instanceof Error?a.message:"Unknown error"}`)}}async healthCheck(){try{return await this.makeRequest("/health")}catch(a){throw Error(`Health check failed: ${a instanceof Error?a.message:"Unknown error"}`)}}}let e=null;function f(){if(e)return e;let a=process.env.NEXT_PUBLIC_BITNOB_CLIENT_ID||process.env.BITNOB_CLIENT_ID||"",b=process.env.BITNOB_SECRET_KEY||"",c=process.env.NEXT_PUBLIC_BITNOB_BASE_URL||process.env.BITNOB_BASE_URL||"https://sandboxapi.bitnob.com/api/v1",f={clientId:a,secretKey:b,environment:c.includes("sandbox")?"sandbox":"production",baseURL:c};return a&&b||console.warn("Bitnob credentials not configured. Bitcoin wallet features will be disabled."),e=new d(f)}let g=f()},96487:()=>{}};