exports.id=352,exports.ids=[352],exports.modules={9806:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,16133,23)),Promise.resolve().then(c.t.bind(c,16444,23)),Promise.resolve().then(c.t.bind(c,16042,23)),Promise.resolve().then(c.t.bind(c,49477,23)),Promise.resolve().then(c.t.bind(c,29345,23)),Promise.resolve().then(c.t.bind(c,12089,23)),Promise.resolve().then(c.t.bind(c,46577,23)),Promise.resolve().then(c.t.bind(c,31307,23)),Promise.resolve().then(c.t.bind(c,14817,23))},15585:(a,b,c)=>{Promise.resolve().then(c.bind(c,48923)),Promise.resolve().then(c.bind(c,99420))},15613:(a,b,c)=>{"use strict";c.d(b,{default:()=>f});var d=c(60687),e=c(37590);function f(){return(0,d.jsx)(e.l$,{position:"top-right",toastOptions:{duration:4e3,style:{background:"#1f2937",color:"#fff"},success:{iconTheme:{primary:"#10b981",secondary:"#fff"}},error:{iconTheme:{primary:"#ef4444",secondary:"#fff"}}}})}},16391:(a,b,c)=>{"use strict";c.d(b,{ND:()=>g});var d=c(60463);let e="https://zvelgxclmqgohntjimyf.supabase.co",f="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp2ZWxneGNsbXFnb2hudGppbXlmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkyOTkzMDUsImV4cCI6MjA2NDg3NTMwNX0.CFdW-XH8y7hkOm7LUtqQxs36hPTRBYtha4EIeRhIXto";if(!e||!f)throw Error("Missing Supabase environment variables");let g=(0,d.UU)(e,f,{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0},global:{fetch:(a,b={})=>fetch(a,{...b,signal:AbortSignal.timeout(3e4)})},db:{schema:"public"},realtime:{params:{eventsPerSecond:10}}})},18404:(a,b,c)=>{"use strict";c.d(b,{Ay:()=>s,JG:()=>i,Ym:()=>f,au:()=>k,pF:()=>h,pU:()=>j,rU:()=>l,xi:()=>g});var d=c(70094),e=c(16391);let f=(0,d.zD)("admin/fetchAllUsers",async(a,{rejectWithValue:b})=>{try{let{data:a,error:b}=await e.ND.from("users").select("*").order("created_at",{ascending:!1});if(b)throw b;return a}catch(a){return b(a.message)}}),g=(0,d.zD)("admin/fetchAllSaccoGroups",async(a,{rejectWithValue:b})=>{try{let{data:a,error:b}=await e.ND.from("sacco_groups").select("*").order("created_at",{ascending:!1});if(b)throw b;return a}catch(a){return b(a.message)}}),h=(0,d.zD)("admin/fetchAllTransactions",async(a,{rejectWithValue:b})=>{try{let{data:a,error:b}=await e.ND.from("transactions").select("*").order("created_at",{ascending:!1}).limit(100);if(b)throw b;return a}catch(a){return b(a.message)}}),i=(0,d.zD)("admin/fetchAdminStats",async(a,{rejectWithValue:b})=>{try{let{count:a}=await e.ND.from("users").select("*",{count:"exact",head:!0}),{count:b}=await e.ND.from("users").select("*",{count:"exact",head:!0}).eq("is_active",!0),{count:c}=await e.ND.from("sacco_groups").select("*",{count:"exact",head:!0}),{count:d}=await e.ND.from("sacco_groups").select("*",{count:"exact",head:!0}).eq("is_active",!0),{count:f}=await e.ND.from("transactions").select("*",{count:"exact",head:!0}),{data:g}=await e.ND.from("transactions").select("amount").eq("status","completed"),h=g?.reduce((a,b)=>a+b.amount,0)||0,{count:i}=await e.ND.from("users").select("*",{count:"exact",head:!0}).eq("kyc_status","pending");return{totalUsers:a||0,activeUsers:b||0,totalSaccoGroups:c||0,activeSaccoGroups:d||0,totalTransactions:f||0,totalVolume:h,pendingKycCount:i||0}}catch(a){return b(a.message)}}),j=(0,d.zD)("admin/updateUserStatus",async({userId:a,updates:b},{rejectWithValue:c})=>{try{let{data:c,error:d}=await e.ND.from("users").update(b).eq("id",a).select().single();if(d)throw d;return c}catch(a){return c(a.message)}}),k=(0,d.zD)("admin/updateSaccoGroupStatus",async({groupId:a,updates:b},{rejectWithValue:c})=>{try{let{data:c,error:d}=await e.ND.from("sacco_groups").update(b).eq("id",a).select().single();if(d)throw d;return c}catch(a){return c(a.message)}}),l=(0,d.zD)("admin/approveKyc",async({userId:a,approved:b},{rejectWithValue:c})=>{try{let{data:c,error:d}=await e.ND.from("users").update({kyc_status:b?"approved":"rejected"}).eq("id",a).select().single();if(d)throw d;return c}catch(a){return c(a.message)}}),m=(0,d.Z0)({name:"admin",initialState:{users:[],saccoGroups:[],transactions:[],stats:null,loading:!1,error:null,selectedUser:null,selectedSaccoGroup:null},reducers:{clearError:a=>{a.error=null},setSelectedUser:(a,b)=>{a.selectedUser=b.payload},setSelectedSaccoGroup:(a,b)=>{a.selectedSaccoGroup=b.payload},clearSelectedUser:a=>{a.selectedUser=null},clearSelectedSaccoGroup:a=>{a.selectedSaccoGroup=null}},extraReducers:a=>{a.addCase(f.pending,a=>{a.loading=!0,a.error=null}).addCase(f.fulfilled,(a,b)=>{a.loading=!1,a.users=b.payload}).addCase(f.rejected,(a,b)=>{a.loading=!1,a.error=b.payload}).addCase(g.pending,a=>{a.loading=!0,a.error=null}).addCase(g.fulfilled,(a,b)=>{a.loading=!1,a.saccoGroups=b.payload}).addCase(g.rejected,(a,b)=>{a.loading=!1,a.error=b.payload}).addCase(h.pending,a=>{a.loading=!0,a.error=null}).addCase(h.fulfilled,(a,b)=>{a.loading=!1,a.transactions=b.payload}).addCase(h.rejected,(a,b)=>{a.loading=!1,a.error=b.payload}).addCase(i.pending,a=>{a.loading=!0,a.error=null}).addCase(i.fulfilled,(a,b)=>{a.loading=!1,a.stats=b.payload}).addCase(i.rejected,(a,b)=>{a.loading=!1,a.error=b.payload}).addCase(j.fulfilled,(a,b)=>{let c=a.users.findIndex(a=>a.id===b.payload.id);-1!==c&&(a.users[c]=b.payload),a.selectedUser?.id===b.payload.id&&(a.selectedUser=b.payload)}).addCase(k.fulfilled,(a,b)=>{let c=a.saccoGroups.findIndex(a=>a.id===b.payload.id);-1!==c&&(a.saccoGroups[c]=b.payload),a.selectedSaccoGroup?.id===b.payload.id&&(a.selectedSaccoGroup=b.payload)}).addCase(l.fulfilled,(a,b)=>{let c=a.users.findIndex(a=>a.id===b.payload.id);-1!==c&&(a.users[c]=b.payload),a.selectedUser?.id===b.payload.id&&(a.selectedUser=b.payload)})}}),{clearError:n,setSelectedUser:o,setSelectedSaccoGroup:p,clearSelectedUser:q,clearSelectedSaccoGroup:r}=m.actions,s=m.reducer},28737:(a,b,c)=>{Promise.resolve().then(c.bind(c,15613)),Promise.resolve().then(c.bind(c,95987))},39727:()=>{},47990:()=>{},48923:(a,b,c)=>{"use strict";c.d(b,{default:()=>d});let d=(0,c(61369).registerClientReference)(function(){throw Error("Attempted to call the default export of \"/home/error51/bitnob/project/village-sacco/src/components/ClientToaster.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/home/error51/bitnob/project/village-sacco/src/components/ClientToaster.tsx","default")},49558:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,25227,23)),Promise.resolve().then(c.t.bind(c,86346,23)),Promise.resolve().then(c.t.bind(c,27924,23)),Promise.resolve().then(c.t.bind(c,40099,23)),Promise.resolve().then(c.t.bind(c,38243,23)),Promise.resolve().then(c.t.bind(c,28827,23)),Promise.resolve().then(c.t.bind(c,62763,23)),Promise.resolve().then(c.t.bind(c,97173,23)),Promise.resolve().then(c.bind(c,25587))},56423:(a,b,c)=>{"use strict";c.d(b,{Ay:()=>m,DY:()=>g,Lx:()=>f,y4:()=>h,z:()=>i});var d=c(70094),e=c(16391);let f=(0,d.zD)("auth/loginUser",async({email:a,password:b},{rejectWithValue:c})=>{try{let{data:c,error:d}=await e.ND.auth.signInWithPassword({email:a,password:b});if(d)throw d;let{data:f,error:g}=await e.ND.from("users").select("*").eq("id",c.user.id).single();if(g)throw g;return{user:{id:f.id,email:f.email,first_name:f.first_name,last_name:f.last_name,phone:f.phone,bitnob_wallet_id:f.bitnob_wallet_id,kyc_status:f.kyc_status,is_active:f.is_active,created_at:f.created_at,updated_at:f.updated_at,name:`${f.first_name} ${f.last_name}`},token:c.session?.access_token||""}}catch(a){return c(a.message)}}),g=(0,d.zD)("auth/registerUser",async({email:a,password:b,firstName:c,lastName:d,phone:e},{rejectWithValue:f})=>{try{let f=await fetch("/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:`${c} ${d}`,email:a,phone:e,password:b})}),g=await f.json();if(!f.ok)throw Error(g.message);return{user:g.user,token:g.token||""}}catch(a){return f(a.message)}}),h=(0,d.zD)("auth/logoutUser",async()=>{await e.ND.auth.signOut()}),i=(0,d.zD)("auth/checkAuthStatus",async(a,{rejectWithValue:b})=>{try{let{data:{session:a}}=await e.ND.auth.getSession();if(!a)throw Error("No session found");let{data:b,error:c}=await e.ND.from("users").select("*").eq("id",a.user.id).single();if(c)throw c;return{user:{id:b.id,email:b.email,first_name:b.first_name,last_name:b.last_name,phone:b.phone,bitnob_wallet_id:b.bitnob_wallet_id,kyc_status:b.kyc_status,is_active:b.is_active,created_at:b.created_at,updated_at:b.updated_at,name:`${b.first_name} ${b.last_name}`},token:a.access_token}}catch(a){return b(a.message)}}),j=(0,d.Z0)({name:"auth",initialState:{user:null,token:null,isAuthenticated:!1,loading:!1,error:null},reducers:{clearError:a=>{a.error=null},updateUser:(a,b)=>{a.user&&(a.user={...a.user,...b.payload})}},extraReducers:a=>{a.addCase(f.pending,a=>{a.loading=!0,a.error=null}).addCase(f.fulfilled,(a,b)=>{a.loading=!1,a.user=b.payload.user,a.token=b.payload.token,a.isAuthenticated=!0,a.error=null}).addCase(f.rejected,(a,b)=>{a.loading=!1,a.user=null,a.token=null,a.isAuthenticated=!1,a.error=b.payload}),a.addCase(g.pending,a=>{a.loading=!0,a.error=null}).addCase(g.fulfilled,(a,b)=>{a.loading=!1,a.user=b.payload.user,a.token=b.payload.token,a.isAuthenticated=!0,a.error=null}).addCase(g.rejected,(a,b)=>{a.loading=!1,a.user=null,a.token=null,a.isAuthenticated=!1,a.error=b.payload}),a.addCase(h.fulfilled,a=>{a.user=null,a.token=null,a.isAuthenticated=!1,a.loading=!1,a.error=null}),a.addCase(i.pending,a=>{a.loading=!0}).addCase(i.fulfilled,(a,b)=>{a.loading=!1,a.user=b.payload.user,a.token=b.payload.token,a.isAuthenticated=!0,a.error=null}).addCase(i.rejected,a=>{a.loading=!1,a.user=null,a.token=null,a.isAuthenticated=!1})}}),{clearError:k,updateUser:l}=j.actions,m=j.reducer},61135:()=>{},94431:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>g});var d=c(37413);c(61120),c(61135);var e=c(99420),f=c(48923);function g({children:a}){return(0,d.jsx)("html",{lang:"en",suppressHydrationWarning:!0,children:(0,d.jsx)("body",{suppressHydrationWarning:!0,children:(0,d.jsxs)(e.ReduxProvider,{children:[a,(0,d.jsx)(f.default,{})]})})})}},95987:(a,b,c)=>{"use strict";c.d(b,{ReduxProvider:()=>$});var d=c(60687),e=c(43210),f=c(21),g=c(70094),h=c(56423);let i=(0,g.Z0)({name:"sacco",initialState:{groups:[],currentGroup:null,loading:!1},reducers:{setGroups:(a,b)=>{a.groups=b.payload},setCurrentGroup:(a,b)=>{a.currentGroup=b.payload},setLoading:(a,b)=>{a.loading=b.payload}}}),{setGroups:j,setCurrentGroup:k,setLoading:l}=i.actions,m=i.reducer;class n{constructor(){this.lightningPayments=[],this.crossBorderTransfers=[],this.virtualCards=[],this.usdtOperations=[]}static getInstance(){return n.instance||(n.instance=new n),n.instance}async createLightningInvoice(a,b){let c={id:`ln_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,amount:a,status:"pending",invoice:`lnbc${a}n1p${Math.random().toString(36).substr(2,20)}`,timestamp:new Date().toISOString()};return this.lightningPayments.push(c),setTimeout(()=>{c.status=Math.random()>.1?"completed":"failed"},2e3),c}async sendLightningPayment(a,b){let c={id:`ln_pay_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,amount:b,status:"pending",timestamp:new Date().toISOString()};return this.lightningPayments.push(c),setTimeout(()=>{c.status=Math.random()>.15?"completed":"failed"},3e3),c}async getLightningPayments(){return this.lightningPayments}async initiateCrossBorderTransfer(a,b,c){let d={id:`cb_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,amount:a,currency:b,recipientCountry:c,status:"processing",exchangeRate:{USD:1,NGN:750,KES:130,GHS:12,EUR:.85,GBP:.75}[b]||1,timestamp:new Date().toISOString()};return this.crossBorderTransfers.push(d),setTimeout(()=>{d.status=Math.random()>.05?"completed":"failed"},5e3*Math.random()+5e3),d}async getCrossBorderTransfers(){return this.crossBorderTransfers}async createVirtualCard(a="visa"){let b={id:`card_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,cardNumber:this.generateCardNumber(a),expiryDate:this.generateExpiryDate(),status:"active",balance:0,type:a};return this.virtualCards.push(b),b}async fundVirtualCard(a,b){let c=this.virtualCards.find(b=>b.id===a);return!!c&&(c.balance+=b,!0)}async getVirtualCards(){return this.virtualCards}async freezeVirtualCard(a){let b=this.virtualCards.find(b=>b.id===a);return!!b&&(b.status="blocked",!0)}async buyUSDT(a){let b={id:`usdt_buy_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,amount:a,type:"buy",status:"pending",rate:1+(Math.random()-.5)*.02,timestamp:new Date().toISOString()};return this.usdtOperations.push(b),setTimeout(()=>{b.status=Math.random()>.05?"completed":"failed"},2e3),b}async sellUSDT(a){let b={id:`usdt_sell_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,amount:a,type:"sell",status:"pending",rate:1+(Math.random()-.5)*.02,timestamp:new Date().toISOString()};return this.usdtOperations.push(b),setTimeout(()=>{b.status=Math.random()>.05?"completed":"failed"},2e3),b}async transferUSDT(a,b){let c={id:`usdt_transfer_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,amount:a,type:"transfer",status:"pending",rate:1,timestamp:new Date().toISOString()};return this.usdtOperations.push(c),setTimeout(()=>{c.status=Math.random()>.1?"completed":"failed"},1500),c}async getUSDTOperations(){return this.usdtOperations}generateCardNumber(a){let b="visa"===a?"4":"5";for(let a=1;a<16;a++)b+=Math.floor(10*Math.random());return b.replace(/(.{4})/g,"$1 ").trim()}generateExpiryDate(){let a=new Date,b=new Date(a.getFullYear()+3,a.getMonth()+Math.floor(12*Math.random()));return`${(b.getMonth()+1).toString().padStart(2,"0")}/${b.getFullYear().toString().substr(2)}`}async clearAllMockData(){this.lightningPayments=[],this.crossBorderTransfers=[],this.virtualCards=[],this.usdtOperations=[]}async generateTestData(){await this.createLightningInvoice(5e4,"Test Invoice 1"),await this.createLightningInvoice(25e3,"Test Invoice 2"),await this.initiateCrossBorderTransfer(100,"NGN","Nigeria"),await this.initiateCrossBorderTransfer(50,"KES","Kenya"),await this.createVirtualCard("visa"),await this.createVirtualCard("mastercard"),await this.buyUSDT(100),await this.sellUSDT(50)}}class o{constructor(a){this.config=a,this.baseURL=a.baseURL||("production"===a.environment?"https://api.bitnob.com/api/v1":"https://sandboxapi.bitnob.com/api/v1"),this.mockServices=n.getInstance()}generateSignature(a,b,d,e,f=""){let g=c(55511),h=`${a}${b}${d}${e}${f}`;return g.createHmac("sha256",this.config.secretKey).update(h).digest("hex")}async makeRequest(a,b="GET",d){try{let e=c(55511),f=Date.now().toString(),g=e.randomBytes(16).toString("hex"),h=d?JSON.stringify(d):"",i=this.generateSignature(b,a,f,g,h),j=new AbortController,k=setTimeout(()=>j.abort(),1e4),l=await fetch(`${this.baseURL}${a}`,{method:b,headers:{"Content-Type":"application/json",Accept:"application/json","x-auth-timestamp":f,"x-auth-nonce":g,"x-auth-signature":i},body:d?JSON.stringify(d):void 0,signal:j.signal});if(clearTimeout(k),!l.ok){let a=await l.json().catch(()=>({}));throw Error(`Bitnob API Error: ${l.status} - ${a.message||l.statusText}`)}return await l.json()}catch(a){if(console.error("Bitnob Service Error:",a),a instanceof Error){if(a.message.includes("getaddrinfo ENOTFOUND")||a.message.includes("fetch failed"))throw Error("Bitnob service is currently unavailable. Please try again later.");if("AbortError"===a.name)throw Error("Bitnob service request timed out. Please try again.")}throw a}}async isServiceAvailable(){try{if(!this.config.secretKey)return console.warn("Bitnob credentials not configured"),!1;let a=await this.makeRequest("/wallets");return a&&(200===a.statusCode||"success"===a.status)}catch(a){if(console.error("Bitnob service availability check failed:",a),a instanceof Error&&(a.message.includes("401")||a.message.includes("403")))return console.warn("Bitnob credentials may be invalid, but service is available"),!0;return!1}}async getAvailableFeatures(){return{wallets:!0,transactions:!0,lightning:!1,crossBorder:!1,virtualCards:!1,stablecoins:!1,message:"Bitnob sandbox currently supports wallet management and transaction history only. Lightning and other advanced features may be available in production."}}async testEndpoints(){let a={};for(let b of["/health","/ping","/wallets","/lightning/invoice","/lightning/send","/bitcoin/send","/rates"])try{let d=c(55511),e=Date.now().toString(),f=d.randomBytes(16).toString("hex"),g=this.generateSignature("GET",b,e,f),h=await fetch(`${this.baseURL}${b}`,{method:"GET",headers:{"x-auth-timestamp":e,"x-auth-nonce":f,"x-auth-signature":g,"Content-Type":"application/json"}});a[b]=404!==h.status}catch(c){a[b]=!1}return a}async createWallet(a){try{return(await this.makeRequest("/wallets","POST",{phoneNumber:a.phoneNumber,email:a.email,firstName:a.firstName,lastName:a.lastName,dateOfBirth:a.dateOfBirth,address:a.address})).data}catch(a){throw console.error("Bitnob wallet creation error:",a),Error(`Wallet creation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getWalletDetails(a){try{return(await this.makeRequest(`/wallets/${a}`)).data}catch(a){throw Error(`Failed to get wallet details: ${a instanceof Error?a.message:"Unknown error"}`)}}async getWalletBalance(a){try{return(await this.makeRequest(`/wallets/${a}/balance`)).data}catch(a){throw Error(`Balance inquiry failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async sendLightningPayment(a){try{if("sandbox"===this.config.environment){console.log("\uD83C\uDF29️ Using mock Lightning service in sandbox mode");let b=await this.mockServices.sendLightningPayment(`lnbc${a.amount}`,a.amount);return{success:!0,data:b,message:"Lightning payment initiated (mock service)"}}return(await this.makeRequest("/lightning/send","POST",a)).data}catch(a){throw console.error("Lightning payment error:",a),a}}async createLightningInvoice(a){try{if("sandbox"===this.config.environment){console.log("⚡ Using mock Lightning invoice service in sandbox mode");let b=await this.mockServices.createLightningInvoice(a.amount,a.memo||"SACCO Platform Payment");return{success:!0,data:b,message:"Lightning invoice created (mock service)"}}return(await this.makeRequest("/lightning/invoice","POST",{amount:a.amount,currency:a.currency,reference:a.reference,memo:a.memo||"SACCO Platform Payment",expiresIn:a.expiresIn||3600})).data}catch(a){throw Error(`Invoice creation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async payLightningInvoice(a,b){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDCB0 Using mock Lightning payment service in sandbox mode");let b=await this.mockServices.sendLightningPayment(a,0);return{success:!0,data:b,message:"Lightning invoice paid (mock service)"}}return(await this.makeRequest("/lightning/pay","POST",{invoice:a,walletId:b})).data}catch(a){throw Error(`Invoice payment failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async sendBitcoin(a){try{return(await this.makeRequest("/bitcoin/send","POST",{amount:a.amount,address:a.address,reference:a.reference,narration:a.narration||"SACCO Platform Payment"})).data}catch(a){throw Error(`Bitcoin transaction failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async generateBitcoinAddress(a){try{return(await this.makeRequest(`/bitcoin/address/${a}`,"POST")).data}catch(a){throw Error(`Address generation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async submitKYC(a){try{let b=new FormData;Object.entries(a).forEach(([a,c])=>{c instanceof File?b.append(a,c):c&&b.append(a,c.toString())});let d=c(55511),e=Date.now().toString(),f=d.randomBytes(16).toString("hex"),g=this.generateSignature("POST","/kyc/submit",e,f),h=await fetch(`${this.baseURL}/kyc/submit`,{method:"POST",headers:{"x-auth-timestamp":e,"x-auth-nonce":f,"x-auth-signature":g},body:b});if(!h.ok){let a=await h.json().catch(()=>({}));throw Error(`KYC submission failed: ${a.message||h.statusText}`)}return(await h.json()).data}catch(a){throw Error(`KYC submission failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getKYCStatus(a){try{return(await this.makeRequest(`/kyc/status/${a}`)).data}catch(a){throw Error(`KYC status check failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async convertBTCToFiat(a){try{return(await this.makeRequest("/convert","POST",{amount:a.amount,fromCurrency:a.fromCurrency,toCurrency:a.toCurrency,reference:a.reference})).data}catch(a){throw Error(`Conversion failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getExchangeRates(a="BTC"){try{return(await this.makeRequest(`/rates?base=${a}`)).data}catch(a){throw Error(`Failed to get exchange rates: ${a instanceof Error?a.message:"Unknown error"}`)}}async getTransactionHistory(a,b=50,c=0){try{return(await this.makeRequest(`/transactions?walletId=${a}&limit=${b}&offset=${c}`)).data}catch(a){throw Error(`Failed to get transaction history: ${a instanceof Error?a.message:"Unknown error"}`)}}async getTransactionDetails(a){try{return(await this.makeRequest(`/transactions/${a}`)).data}catch(a){throw Error(`Failed to get transaction details: ${a instanceof Error?a.message:"Unknown error"}`)}}verifyWebhookSignature(a,b,d){try{let e=c(55511),f=e.createHmac("sha256",d).update(a).digest("hex");return e.timingSafeEqual(Buffer.from(b,"hex"),Buffer.from(f,"hex"))}catch(a){return console.error("Webhook signature verification failed:",a),!1}}async sendUSDT(a){try{return(await this.makeRequest("/stablecoins/usdt/send","POST",{amount:a.amount,currency:a.currency,targetNetwork:a.targetNetwork,recipientAddress:a.recipientAddress,reference:a.reference})).data}catch(a){throw Error(`USDT transfer failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async convertToUSDT(a){try{return(await this.makeRequest("/stablecoins/convert","POST",{amount:a.amount,fromCurrency:a.fromCurrency,toCurrency:"USDT",reference:a.reference})).data}catch(a){throw Error(`USDT conversion failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getCrossBorderRates(a,b,c){try{return(await this.makeRequest(`/cross-border/rates?source=${a}&target=${b}&country=${c}`)).data}catch(a){throw Error(`Failed to get cross-border rates: ${a instanceof Error?a.message:"Unknown error"}`)}}async updateCardLimit(a,b){try{return(await this.makeRequest(`/virtual-cards/${a}/limit`,"PUT",{spendingLimit:b})).data}catch(a){throw Error(`Failed to update card limit: ${a instanceof Error?a.message:"Unknown error"}`)}}async sendCrossBorderPayment(a){try{if("sandbox"===this.config.environment){console.log("\uD83C\uDF0D Using mock cross-border service in sandbox mode");let b=await this.mockServices.initiateCrossBorderTransfer(a.amount,a.targetCurrency,a.recipientCountry);return{success:!0,data:b,message:"Cross-border payment initiated (mock service)"}}return(await this.makeRequest("/cross-border/send","POST",a)).data}catch(a){throw Error(`Cross-border payment failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getCrossBorderTransfers(){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDCCB Using mock cross-border history in sandbox mode");let a=await this.mockServices.getCrossBorderTransfers();return{success:!0,data:a,message:"Cross-border transfers retrieved (mock service)"}}return(await this.makeRequest("/cross-border/transfers")).data}catch(a){throw Error(`Failed to get cross-border transfers: ${a instanceof Error?a.message:"Unknown error"}`)}}async createVirtualCard(a){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDCB3 Using mock virtual card service in sandbox mode");let a=await this.mockServices.createVirtualCard("visa");return{success:!0,data:a,message:"Virtual card created (mock service)"}}return(await this.makeRequest("/virtual-cards","POST",a)).data}catch(a){throw Error(`Virtual card creation failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getVirtualCards(a){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDDC2️ Using mock virtual card list in sandbox mode");let a=await this.mockServices.getVirtualCards();return{success:!0,data:a,message:"Virtual cards retrieved (mock service)"}}let b=a?`/virtual-cards/user/${a}`:"/virtual-cards";return(await this.makeRequest(b)).data}catch(a){throw Error(`Failed to get virtual cards: ${a instanceof Error?a.message:"Unknown error"}`)}}async fundVirtualCard(a,b){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDCB0 Using mock card funding in sandbox mode");let c=await this.mockServices.fundVirtualCard(a,b);return{success:c,message:`Virtual card ${c?"funded":"funding failed"} (mock service)`}}return(await this.makeRequest(`/virtual-cards/${a}/fund`,"POST",{amount:b})).data}catch(a){throw Error(`Failed to fund card: ${a instanceof Error?a.message:"Unknown error"}`)}}async freezeCard(a){try{if("sandbox"===this.config.environment){console.log("\uD83E\uDDCA Using mock card freeze in sandbox mode");let b=await this.mockServices.freezeVirtualCard(a);return{success:b,message:`Virtual card ${b?"frozen":"freeze failed"} (mock service)`}}return(await this.makeRequest(`/virtual-cards/${a}/freeze`,"POST")).data}catch(a){throw Error(`Failed to freeze card: ${a instanceof Error?a.message:"Unknown error"}`)}}async unfreezeCard(a){try{return"sandbox"===this.config.environment&&console.log("\uD83D\uDD25 Mock card unfreeze not implemented - using production endpoint"),(await this.makeRequest(`/virtual-cards/${a}/unfreeze`,"POST")).data}catch(a){throw Error(`Failed to unfreeze card: ${a instanceof Error?a.message:"Unknown error"}`)}}async buyStablecoin(a){try{if("sandbox"===this.config.environment){console.log("\uD83E\uDE99 Using mock USDT buy service in sandbox mode");let b=await this.mockServices.buyUSDT(a.amount);return{success:!0,data:b,message:"USDT purchased (mock service)"}}return(await this.makeRequest("/stablecoins/buy","POST",a)).data}catch(a){throw Error(`Stablecoin purchase failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async sellStablecoin(a){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDCB1 Using mock USDT sell service in sandbox mode");let b=await this.mockServices.sellUSDT(a.amount);return{success:!0,data:b,message:"USDT sold (mock service)"}}return(await this.makeRequest("/stablecoins/sell","POST",a)).data}catch(a){throw Error(`Stablecoin sale failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async transferStablecoin(a){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDD04 Using mock USDT transfer service in sandbox mode");let b=await this.mockServices.transferUSDT(a.amount,a.recipientAddress||"mock-recipient");return{success:!0,data:b,message:"USDT transferred (mock service)"}}return(await this.makeRequest("/stablecoins/transfer","POST",a)).data}catch(a){throw Error(`Stablecoin transfer failed: ${a instanceof Error?a.message:"Unknown error"}`)}}async getStablecoinOperations(){try{if("sandbox"===this.config.environment){console.log("\uD83D\uDCCA Using mock USDT operations in sandbox mode");let a=await this.mockServices.getUSDTOperations();return{success:!0,data:a,message:"USDT operations retrieved (mock service)"}}return(await this.makeRequest("/stablecoins/operations")).data}catch(a){throw Error(`Failed to get stablecoin operations: ${a instanceof Error?a.message:"Unknown error"}`)}}async healthCheck(){try{return await this.makeRequest("/health")}catch(a){throw Error(`Health check failed: ${a instanceof Error?a.message:"Unknown error"}`)}}}let p=null,q=function(){if(p)return p;let a=process.env.BITNOB_SECRET_KEY||"",b=process.env.NEXT_PUBLIC_BITNOB_BASE_URL||process.env.BITNOB_BASE_URL||"https://sandboxapi.bitnob.com/api/v1",c={secretKey:a,environment:b.includes("sandbox")?"sandbox":"production",baseURL:b};return a||console.warn("Bitnob credentials not configured. Bitcoin wallet features will be disabled."),p=new o(c)}(),r=(0,g.zD)("wallet/createWallet",async a=>await q.createWallet(a)),s=(0,g.zD)("wallet/fetchBalance",async a=>await q.getWalletBalance(a)),t=(0,g.zD)("wallet/fetchTransactions",async a=>await q.getTransactionHistory(a)),u=(0,g.zD)("wallet/sendLightningPayment",async a=>await q.sendLightningPayment(a)),v=(0,g.zD)("wallet/createInvoice",async a=>await q.createLightningInvoice(a)),w=(0,g.zD)("wallet/getExchangeRates",async(a="BTC")=>await q.getExchangeRates(a)),x=(0,g.Z0)({name:"wallet",initialState:{balance:null,transactions:[],loading:!1,error:null,walletId:null},reducers:{clearWalletError:a=>{a.error=null},setWalletId:(a,b)=>{a.walletId=b.payload},updateBalance:(a,b)=>{a.balance=b.payload},addTransaction:(a,b)=>{a.transactions.unshift(b.payload)},updateTransaction:(a,b)=>{let{id:c,updates:d}=b.payload,e=a.transactions.findIndex(a=>a.id===c);-1!==e&&(a.transactions[e]={...a.transactions[e],...d})}},extraReducers:a=>{a.addCase(r.pending,a=>{a.loading=!0,a.error=null}).addCase(r.fulfilled,(a,b)=>{a.loading=!1,a.walletId=b.payload.id,a.balance={btc:0,satoshis:0,fiat:0,currency:"UGX",lastUpdated:new Date().toISOString()}}).addCase(r.rejected,(a,b)=>{a.loading=!1,a.error=b.error.message||"Failed to create wallet"}),a.addCase(s.pending,a=>{a.loading=!0,a.error=null}).addCase(s.fulfilled,(a,b)=>{a.loading=!1,a.balance={btc:b.payload.btc||0,satoshis:b.payload.satoshis||0,fiat:b.payload.fiat||0,currency:b.payload.currency||"UGX",lastUpdated:new Date().toISOString()}}).addCase(s.rejected,(a,b)=>{a.loading=!1,a.error=b.error.message||"Failed to fetch balance"}),a.addCase(t.pending,a=>{a.loading=!0,a.error=null}).addCase(t.fulfilled,(a,b)=>{a.loading=!1,a.transactions=b.payload.transactions||[]}).addCase(t.rejected,(a,b)=>{a.loading=!1,a.error=b.error.message||"Failed to fetch transactions"}),a.addCase(u.pending,a=>{a.loading=!0,a.error=null}).addCase(u.fulfilled,(a,b)=>{a.loading=!1,b.payload.transaction&&a.transactions.unshift(b.payload.transaction)}).addCase(u.rejected,(a,b)=>{a.loading=!1,a.error=b.error.message||"Payment failed"}),a.addCase(v.pending,a=>{a.loading=!0,a.error=null}).addCase(v.fulfilled,a=>{a.loading=!1}).addCase(v.rejected,(a,b)=>{a.loading=!1,a.error=b.error.message||"Failed to create invoice"}),a.addCase(w.pending,a=>{a.loading=!0,a.error=null}).addCase(w.fulfilled,a=>{a.loading=!1}).addCase(w.rejected,(a,b)=>{a.loading=!1,a.error=b.error.message||"Failed to fetch exchange rates"})}}),{clearWalletError:y,setWalletId:z,updateBalance:A,addTransaction:B,updateTransaction:C}=x.actions,D=x.reducer,E=(0,g.Z0)({name:"transactions",initialState:{transactions:[],loading:!1},reducers:{setTransactions:(a,b)=>{a.transactions=b.payload},addTransaction:(a,b)=>{a.transactions.unshift(b.payload)},setLoading:(a,b)=>{a.loading=b.payload}}}),{setTransactions:F,addTransaction:G,setLoading:H}=E.actions,I=E.reducer;var J=c(18404),K=c(16391);let L=(0,g.zD)("governance/fetchProposals",async(a,{rejectWithValue:b})=>{try{let b=K.ND.from("governance_proposals").select(`
          *,
          users!governance_proposals_proposed_by_fkey(first_name, last_name)
        `).order("created_at",{ascending:!1});a&&(b=b.eq("sacco_group_id",a));let{data:c,error:d}=await b;if(d)throw d;return c.map(a=>({...a,proposer_name:a.users?`${a.users.first_name} ${a.users.last_name}`:"Unknown"}))}catch(a){return b(a.message)}}),M=(0,g.zD)("governance/createProposal",async(a,{rejectWithValue:b})=>{try{let{data:b,error:c}=await K.ND.from("governance_proposals").insert(a).select().single();if(c)throw c;return b}catch(a){return b(a.message)}}),N=(0,g.zD)("governance/castVote",async(a,{rejectWithValue:b})=>{try{let{data:b,error:c}=await K.ND.from("governance_votes").insert({...a,voting_weight:a.voting_weight||1}).select().single();if(c)throw c;let{error:d}=await K.ND.rpc("update_proposal_votes",{proposal_id:a.proposal_id});if(d)throw d;return b}catch(a){return b(a.message)}}),O=(0,g.zD)("governance/fetchUserVotes",async(a,{rejectWithValue:b})=>{try{let{data:a,error:b}=await K.ND.from("governance_votes").select("*").order("voted_at",{ascending:!1});if(b)throw b;return a}catch(a){return b(a.message)}}),P=(0,g.zD)("governance/fetchLoanDefaults",async(a,{rejectWithValue:b})=>{try{let{data:a,error:b}=await K.ND.from("loan_defaults").select(`
          *,
          loans!loan_defaults_loan_id_fkey(
            borrower_id,
            amount,
            users!loans_borrower_id_fkey(first_name, last_name)
          )
        `).order("flagged_at",{ascending:!1});if(b)throw b;return a.map(a=>({...a,loan:a.loans?{...a.loans,borrower_name:a.loans.users?`${a.loans.users.first_name} ${a.loans.users.last_name}`:"Unknown"}:null}))}catch(a){return b(a.message)}}),Q=(0,g.zD)("governance/fetchTransactionHistory",async(a,{rejectWithValue:b})=>{try{let{data:a,error:b}=await K.ND.from("member_transaction_history").select("*").order("created_at",{ascending:!1});if(b)throw b;return a}catch(a){return b(a.message)}}),R=(0,g.zD)("governance/fetchAuditLog",async(a,{rejectWithValue:b})=>{try{let b=K.ND.from("audit_log").select("*").order("timestamp",{ascending:!1}).limit(100);a?.table_name&&(b=b.eq("table_name",a.table_name)),a?.user_id&&(b=b.eq("user_id",a.user_id));let{data:c,error:d}=await b;if(d)throw d;return c}catch(a){return b(a.message)}}),S=(0,g.zD)("governance/updateLoanDefaultStatus",async({defaultId:a,status:b,notes:c},{rejectWithValue:d})=>{try{let d={status:b};c&&(d.resolution_notes=c),"written_off"===b&&(d.resolved_at=new Date().toISOString());let{data:e,error:f}=await K.ND.from("loan_defaults").update(d).eq("id",a).select().single();if(f)throw f;return e}catch(a){return d(a.message)}}),T=(0,g.Z0)({name:"governance",initialState:{proposals:[],userVotes:[],loanDefaults:[],transactionHistory:[],auditLog:[],loading:!1,error:null,selectedProposal:null},reducers:{clearError:a=>{a.error=null},setSelectedProposal:(a,b)=>{a.selectedProposal=b.payload},clearSelectedProposal:a=>{a.selectedProposal=null}},extraReducers:a=>{a.addCase(L.pending,a=>{a.loading=!0,a.error=null}).addCase(L.fulfilled,(a,b)=>{a.loading=!1,a.proposals=b.payload}).addCase(L.rejected,(a,b)=>{a.loading=!1,a.error=b.payload}).addCase(M.fulfilled,(a,b)=>{a.proposals.unshift(b.payload)}).addCase(N.fulfilled,(a,b)=>{a.userVotes.unshift(b.payload)}).addCase(O.fulfilled,(a,b)=>{a.userVotes=b.payload}).addCase(P.fulfilled,(a,b)=>{a.loanDefaults=b.payload}).addCase(Q.fulfilled,(a,b)=>{a.transactionHistory=b.payload}).addCase(R.fulfilled,(a,b)=>{a.auditLog=b.payload}).addCase(S.fulfilled,(a,b)=>{let c=a.loanDefaults.findIndex(a=>a.id===b.payload.id);-1!==c&&(a.loanDefaults[c]=b.payload)})}}),{clearError:U,setSelectedProposal:V,clearSelectedProposal:W}=T.actions,X=T.reducer,Y=(0,g.U1)({reducer:{auth:h.Ay,sacco:m,wallet:D,transactions:I,admin:J.Ay,governance:X}});function Z({children:a}){let[b,c]=(0,e.useState)(!1);return(0,d.jsx)(d.Fragment,{children:a})}function $({children:a}){return(0,d.jsx)(f.Kq,{store:Y,children:(0,d.jsx)(Z,{children:a})})}},99420:(a,b,c)=>{"use strict";c.d(b,{ReduxProvider:()=>d});let d=(0,c(61369).registerClientReference)(function(){throw Error("Attempted to call ReduxProvider() from the server but ReduxProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/home/error51/bitnob/project/village-sacco/src/store/provider.tsx","ReduxProvider")}};