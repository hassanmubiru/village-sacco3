"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7316],{7316:(e,a,t)=>{t.d(a,{oN:()=>g,Ay:()=>k,JV:()=>u,Ik:()=>d,RZ:()=>h});var r=t(4536),n=t(9641).Buffer,o=t(9509);class i{generateSignature(e,a,r,n){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",i=t(8777),c="".concat(e).concat(a).concat(r).concat(n).concat(o);return i.createHmac("sha256",this.config.secretKey).update(c).digest("hex")}async makeRequest(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",r=arguments.length>2?arguments[2]:void 0;try{let n=t(8777),o=Date.now().toString(),i=n.randomBytes(16).toString("hex"),c=r?JSON.stringify(r):"",s=this.generateSignature(a,e,o,i,c),l=new AbortController,d=setTimeout(()=>l.abort(),1e4),u=await fetch("".concat(this.baseURL).concat(e),{method:a,headers:{"Content-Type":"application/json",Accept:"application/json","x-auth-client":this.config.clientId,"x-auth-timestamp":o,"x-auth-nonce":i,"x-auth-signature":s},body:r?JSON.stringify(r):void 0,signal:l.signal});if(clearTimeout(d),!u.ok){let e=await u.json().catch(()=>({}));throw Error("Bitnob API Error: ".concat(u.status," - ").concat(e.message||u.statusText))}return await u.json()}catch(e){if(console.error("Bitnob Service Error:",e),e instanceof Error){if(e.message.includes("getaddrinfo ENOTFOUND")||e.message.includes("fetch failed"))throw Error("Bitnob service is currently unavailable. Please try again later.");if("AbortError"===e.name)throw Error("Bitnob service request timed out. Please try again.")}throw e}}async isServiceAvailable(){try{if(!this.config.clientId||!this.config.secretKey)return console.warn("Bitnob credentials not configured"),!1;let e=await this.makeRequest("/health");return e&&"ok"===e.status}catch(e){return console.error("Bitnob service availability check failed:",e),!1}}async testEndpoints(){let e={};for(let a of["/health","/ping","/wallets","/lightning/invoice","/lightning/send","/bitcoin/send","/rates"])try{let r=t(8777),n=Date.now().toString(),o=r.randomBytes(16).toString("hex"),i=this.generateSignature("GET",a,n,o),c=await fetch("".concat(this.baseURL).concat(a),{method:"GET",headers:{"x-auth-client":this.config.clientId,"x-auth-timestamp":n,"x-auth-nonce":o,"x-auth-signature":i,"Content-Type":"application/json"}});e[a]=404!==c.status}catch(t){e[a]=!1}return e}async createWallet(e){try{if(!await this.isServiceAvailable())throw Error("Bitnob service is currently unavailable");return(await this.makeRequest("/wallets/create","POST",{phoneNumber:e.phoneNumber,email:e.email,firstName:e.firstName,lastName:e.lastName,dateOfBirth:e.dateOfBirth,address:e.address})).data}catch(e){throw console.error("Bitnob wallet creation error:",e),Error("Wallet creation failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getWalletDetails(e){try{return(await this.makeRequest("/wallets/".concat(e))).data}catch(e){throw Error("Failed to get wallet details: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getWalletBalance(e){try{return(await this.makeRequest("/wallets/".concat(e,"/balance"))).data}catch(e){throw Error("Balance inquiry failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async sendLightningPayment(e){try{if(!await this.isServiceAvailable())throw Error("Bitnob service is currently unavailable. Please try again later.");return(await this.makeRequest("/lightning/send","POST",{amount:e.amount,reference:e.reference,narration:e.narration||"SACCO Platform Payment"})).data}catch(e){if(console.error("Lightning payment error:",e),e instanceof Error&&e.message.includes("404"))throw Error("Lightning payment service is temporarily unavailable. The API endpoint may have changed. Please contact support.");throw Error("Lightning payment failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async createLightningInvoice(e){try{return(await this.makeRequest("/lightning/invoice","POST",{amount:e.amount,currency:e.currency,reference:e.reference,memo:e.memo||"SACCO Platform Payment",expiresIn:e.expiresIn||3600})).data}catch(e){throw Error("Invoice creation failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async payLightningInvoice(e,a){try{return(await this.makeRequest("/lightning/pay","POST",{invoice:e,walletId:a})).data}catch(e){throw Error("Invoice payment failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async sendBitcoin(e){try{return(await this.makeRequest("/bitcoin/send","POST",{amount:e.amount,address:e.address,reference:e.reference,narration:e.narration||"SACCO Platform Payment"})).data}catch(e){throw Error("Bitcoin transaction failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async generateBitcoinAddress(e){try{return(await this.makeRequest("/bitcoin/address/".concat(e),"POST")).data}catch(e){throw Error("Address generation failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async submitKYC(e){try{let a=new FormData;Object.entries(e).forEach(e=>{let[t,r]=e;r instanceof File?a.append(t,r):r&&a.append(t,r.toString())});let r=t(8777),n=Date.now().toString(),o=r.randomBytes(16).toString("hex"),i=this.generateSignature("POST","/kyc/submit",n,o),c=await fetch("".concat(this.baseURL,"/kyc/submit"),{method:"POST",headers:{"x-auth-client":this.config.clientId,"x-auth-timestamp":n,"x-auth-nonce":o,"x-auth-signature":i},body:a});if(!c.ok){let e=await c.json().catch(()=>({}));throw Error("KYC submission failed: ".concat(e.message||c.statusText))}return(await c.json()).data}catch(e){throw Error("KYC submission failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getKYCStatus(e){try{return(await this.makeRequest("/kyc/status/".concat(e))).data}catch(e){throw Error("KYC status check failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async convertBTCToFiat(e){try{return(await this.makeRequest("/convert","POST",{amount:e.amount,fromCurrency:e.fromCurrency,toCurrency:e.toCurrency,reference:e.reference})).data}catch(e){throw Error("Conversion failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getExchangeRates(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"BTC";try{return(await this.makeRequest("/rates?base=".concat(e))).data}catch(e){throw Error("Failed to get exchange rates: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getTransactionHistory(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:50,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;try{return(await this.makeRequest("/transactions?walletId=".concat(e,"&limit=").concat(a,"&offset=").concat(t))).data}catch(e){throw Error("Failed to get transaction history: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getTransactionDetails(e){try{return(await this.makeRequest("/transactions/".concat(e))).data}catch(e){throw Error("Failed to get transaction details: ".concat(e instanceof Error?e.message:"Unknown error"))}}verifyWebhookSignature(e,a,r){try{let o=t(8777),i=o.createHmac("sha256",r).update(e).digest("hex");return o.timingSafeEqual(n.from(a,"hex"),n.from(i,"hex"))}catch(e){return console.error("Webhook signature verification failed:",e),!1}}async sendUSDT(e){try{return(await this.makeRequest("/stablecoins/usdt/send","POST",{amount:e.amount,currency:e.currency,targetNetwork:e.targetNetwork,recipientAddress:e.recipientAddress,reference:e.reference})).data}catch(e){throw Error("USDT transfer failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async convertToUSDT(e){try{return(await this.makeRequest("/stablecoins/convert","POST",{amount:e.amount,fromCurrency:e.fromCurrency,toCurrency:"USDT",reference:e.reference})).data}catch(e){throw Error("USDT conversion failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async sendCrossBorderPayment(e){try{return(await this.makeRequest("/cross-border/send","POST",{amount:e.amount,sourceCurrency:e.sourceCurrency,targetCurrency:e.targetCurrency,recipientCountry:e.recipientCountry,recipientPhoneNumber:e.recipientPhoneNumber,recipientBankAccount:e.recipientBankAccount,reference:e.reference,description:e.description||"SACCO Cross-border Payment"})).data}catch(e){throw Error("Cross-border payment failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getCrossBorderRates(e,a,t){try{return(await this.makeRequest("/cross-border/rates?source=".concat(e,"&target=").concat(a,"&country=").concat(t))).data}catch(e){throw Error("Failed to get cross-border rates: ".concat(e instanceof Error?e.message:"Unknown error"))}}async createVirtualCard(e){try{return(await this.makeRequest("/virtual-cards/create","POST",{userId:e.userId,cardHolderName:e.cardHolderName,spendingLimit:e.spendingLimit,currency:e.currency,type:e.type})).data}catch(e){throw Error("Virtual card creation failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getVirtualCards(e){try{return(await this.makeRequest("/virtual-cards/user/".concat(e))).data}catch(e){throw Error("Failed to get virtual cards: ".concat(e instanceof Error?e.message:"Unknown error"))}}async updateCardLimit(e,a){try{return(await this.makeRequest("/virtual-cards/".concat(e,"/limit"),"PUT",{spendingLimit:a})).data}catch(e){throw Error("Failed to update card limit: ".concat(e instanceof Error?e.message:"Unknown error"))}}async freezeCard(e){try{return(await this.makeRequest("/virtual-cards/".concat(e,"/freeze"),"POST")).data}catch(e){throw Error("Failed to freeze card: ".concat(e instanceof Error?e.message:"Unknown error"))}}async unfreezeCard(e){try{return(await this.makeRequest("/virtual-cards/".concat(e,"/unfreeze"),"POST")).data}catch(e){throw Error("Failed to unfreeze card: ".concat(e instanceof Error?e.message:"Unknown error"))}}async healthCheck(){try{return await this.makeRequest("/health")}catch(e){throw Error("Health check failed: ".concat(e instanceof Error?e.message:"Unknown error"))}}constructor(e){this.config=e,this.baseURL=e.baseURL||("production"===e.environment?"https://api.bitnob.com/api/v1":"https://sandboxapi.bitnob.com/api/v1")}}let c=null,s=function(){if(c)return c;let e=o.env.NEXT_PUBLIC_BITNOB_CLIENT_ID||o.env.BITNOB_CLIENT_ID||"",a=o.env.BITNOB_SECRET_KEY||"",t=o.env.NEXT_PUBLIC_BITNOB_BASE_URL||o.env.BITNOB_BASE_URL||"https://sandboxapi.bitnob.com/api/v1",r={clientId:e,secretKey:a,environment:t.includes("sandbox")?"sandbox":"production",baseURL:t};return e&&a||console.warn("Bitnob credentials not configured. Bitcoin wallet features will be disabled."),c=new i(r)}(),l=(0,r.zD)("wallet/createWallet",async e=>await s.createWallet(e)),d=(0,r.zD)("wallet/fetchBalance",async e=>await s.getWalletBalance(e)),u=(0,r.zD)("wallet/fetchTransactions",async e=>await s.getTransactionHistory(e)),h=(0,r.zD)("wallet/sendLightningPayment",async e=>await s.sendLightningPayment(e)),g=(0,r.zD)("wallet/createInvoice",async e=>await s.createLightningInvoice(e)),m=(0,r.zD)("wallet/getExchangeRates",async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"BTC";return await s.getExchangeRates(e)}),f=(0,r.Z0)({name:"wallet",initialState:{balance:null,transactions:[],loading:!1,error:null,walletId:null},reducers:{clearWalletError:e=>{e.error=null},setWalletId:(e,a)=>{e.walletId=a.payload},updateBalance:(e,a)=>{e.balance=a.payload},addTransaction:(e,a)=>{e.transactions.unshift(a.payload)},updateTransaction:(e,a)=>{let{id:t,updates:r}=a.payload,n=e.transactions.findIndex(e=>e.id===t);-1!==n&&(e.transactions[n]={...e.transactions[n],...r})}},extraReducers:e=>{e.addCase(l.pending,e=>{e.loading=!0,e.error=null}).addCase(l.fulfilled,(e,a)=>{e.loading=!1,e.walletId=a.payload.id,e.balance={btc:0,satoshis:0,fiat:0,currency:"UGX",lastUpdated:new Date().toISOString()}}).addCase(l.rejected,(e,a)=>{e.loading=!1,e.error=a.error.message||"Failed to create wallet"}),e.addCase(d.pending,e=>{e.loading=!0,e.error=null}).addCase(d.fulfilled,(e,a)=>{e.loading=!1,e.balance={btc:a.payload.btc||0,satoshis:a.payload.satoshis||0,fiat:a.payload.fiat||0,currency:a.payload.currency||"UGX",lastUpdated:new Date().toISOString()}}).addCase(d.rejected,(e,a)=>{e.loading=!1,e.error=a.error.message||"Failed to fetch balance"}),e.addCase(u.pending,e=>{e.loading=!0,e.error=null}).addCase(u.fulfilled,(e,a)=>{e.loading=!1,e.transactions=a.payload.transactions||[]}).addCase(u.rejected,(e,a)=>{e.loading=!1,e.error=a.error.message||"Failed to fetch transactions"}),e.addCase(h.pending,e=>{e.loading=!0,e.error=null}).addCase(h.fulfilled,(e,a)=>{e.loading=!1,a.payload.transaction&&e.transactions.unshift(a.payload.transaction)}).addCase(h.rejected,(e,a)=>{e.loading=!1,e.error=a.error.message||"Payment failed"}),e.addCase(g.pending,e=>{e.loading=!0,e.error=null}).addCase(g.fulfilled,e=>{e.loading=!1}).addCase(g.rejected,(e,a)=>{e.loading=!1,e.error=a.error.message||"Failed to create invoice"}),e.addCase(m.pending,e=>{e.loading=!0,e.error=null}).addCase(m.fulfilled,e=>{e.loading=!1}).addCase(m.rejected,(e,a)=>{e.loading=!1,e.error=a.error.message||"Failed to fetch exchange rates"})}}),{clearWalletError:y,setWalletId:w,updateBalance:p,addTransaction:E,updateTransaction:b}=f.actions,k=f.reducer}}]);