(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4029],{8259:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>n});var a=t(5155),i=t(2115);function n(){let[e,s]=(0,i.useState)([]),[t,n]=(0,i.useState)(!1),r=(e,t,a)=>{s(s=>[...s,{test:e,result:t,success:a,timestamp:new Date().toISOString()}])},o=async()=>{n(!0),s([]);try{r("Auto-approving memberships","Starting...",!0);let e=await fetch("/api/admin/auto-approve-memberships",{method:"POST",headers:{"Content-Type":"application/json"}}),s=await e.json();r("Auto-approve memberships",s,e.ok),r("Testing savings addition","Starting...",!0);let t=await fetch("/api/sacco-groups"),a=await t.json();if(r("Fetch SACCO groups",a,t.ok),a.success&&a.data&&a.data.length>0){let e=a.data[0],s=await fetch("/api/savings/add",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:"test-user-123",groupId:e.id,amount:5e3,description:"Test savings deposit"})}),t=await s.json();r("Add test savings",t,s.ok)}else r("Add test savings","No SACCO groups found to test with",!1);let i=await fetch("/api/admin/approve-membership"),n=await i.json();r("Check pending memberships",n,i.ok)}catch(e){r("Test execution","Error: ".concat(e),!1)}finally{n(!1)}},d=async()=>{n(!0);try{let e=await fetch("/api/sacco-groups",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:"Test Savings Group",description:"A test group for savings functionality",contributionAmount:5e3,contributionFrequency:"monthly",interestRate:2.5,maxMembers:10,createdBy:"test-admin-123"})}),s=await e.json();if(r("Create test group",s,e.ok),s.success){let e=await fetch("/api/sacco-groups/".concat(s.data.id,"/membership"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:"test-user-123",action:"join"})}),t=await e.json();r("Join test group",t,e.ok)}}catch(e){r("Create test data","Error: ".concat(e),!1)}finally{n(!1)}};return(0,a.jsx)("div",{className:"min-h-screen bg-gray-50 py-8",children:(0,a.jsx)("div",{className:"max-w-4xl mx-auto px-4",children:(0,a.jsxs)("div",{className:"bg-white rounded-lg shadow-lg p-6",children:[(0,a.jsx)("h1",{className:"text-3xl font-bold text-gray-900 mb-6",children:"\uD83D\uDCB0 SACCO Savings Functionality Test"}),(0,a.jsxs)("div",{className:"mb-6",children:[(0,a.jsxs)("p",{className:"text-gray-600 mb-4",children:["This page helps test the fixed savings functionality. The original error was caused by the API trying to use non-existent database tables (",(0,a.jsx)("code",{children:"personal_savings"})," and",(0,a.jsx)("code",{children:"savings_transactions"}),"). This has been fixed to use the correct schema."]}),(0,a.jsxs)("div",{className:"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4",children:[(0,a.jsx)("h3",{className:"font-semibold text-blue-800 mb-2",children:"✅ What was fixed:"}),(0,a.jsxs)("ul",{className:"text-blue-700 space-y-1",children:[(0,a.jsxs)("li",{children:["• Updated API to use ",(0,a.jsx)("code",{children:"savings_accounts"})," instead of ",(0,a.jsx)("code",{children:"personal_savings"})]}),(0,a.jsxs)("li",{children:["• Updated API to use ",(0,a.jsx)("code",{children:"transactions"})," instead of ",(0,a.jsx)("code",{children:"savings_transactions"})]}),(0,a.jsx)("li",{children:"• Added proper membership validation"}),(0,a.jsx)("li",{children:"• Added better error handling and debugging"}),(0,a.jsx)("li",{children:"• Created admin endpoints for membership approval"})]})]})]}),(0,a.jsxs)("div",{className:"space-y-4",children:[(0,a.jsx)("button",{onClick:d,disabled:t,className:"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:bg-gray-400",children:t?"Creating...":"\uD83C\uDFD7️ Create Test Data (Group + Membership)"}),(0,a.jsx)("button",{onClick:o,disabled:t,className:"w-full bg-green-600 text-white py-3 px-4 rounded-lg hover:bg-green-700 disabled:bg-gray-400",children:t?"Testing...":"\uD83E\uDDEA Run Savings Tests"})]}),e.length>0&&(0,a.jsxs)("div",{className:"mt-8",children:[(0,a.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Test Results:"}),(0,a.jsx)("div",{className:"space-y-3",children:e.map((e,s)=>(0,a.jsxs)("div",{className:"p-4 rounded-lg border ".concat(e.success?"bg-green-50 border-green-200":"bg-red-50 border-red-200"),children:[(0,a.jsxs)("div",{className:"flex items-center justify-between mb-2",children:[(0,a.jsxs)("h3",{className:"font-semibold ".concat(e.success?"text-green-800":"text-red-800"),children:[e.success?"✅":"❌"," ",e.test]}),(0,a.jsx)("span",{className:"text-xs text-gray-500",children:new Date(e.timestamp).toLocaleTimeString()})]}),(0,a.jsx)("pre",{className:"text-sm overflow-auto ".concat(e.success?"text-green-700":"text-red-700"),children:JSON.stringify(e.result,null,2)})]},s))})]}),(0,a.jsxs)("div",{className:"mt-8 p-4 bg-gray-50 rounded-lg",children:[(0,a.jsx)("h3",{className:"font-semibold text-gray-800 mb-2",children:"How to test manually:"}),(0,a.jsxs)("ol",{className:"text-gray-700 space-y-1",children:[(0,a.jsx)("li",{children:'1. Click "Create Test Data" to set up a test group and membership'}),(0,a.jsx)("li",{children:'2. Click "Run Savings Tests" to auto-approve and test savings'}),(0,a.jsx)("li",{children:"3. Go to the main SACCO page and try adding savings to see the UI"}),(0,a.jsx)("li",{children:"4. Check the browser console for detailed API logs"})]})]})]})})})}},9456:(e,s,t)=>{Promise.resolve().then(t.bind(t,8259))}},e=>{e.O(0,[8441,5964,7358],()=>e(e.s=9456)),_N_E=e.O()}]);